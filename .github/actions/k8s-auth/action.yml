name: Entur/Meta/KubernetesAuth
description: Authenticate with Kubernetes cluster
inputs:
  environment:
    description: "GitHub environment to use Google Cloud: (dev, tst, prd) or Azure: (az-dev, az-test, az-prod)"
    default: "prd"
  cloud_provider:
    description: "Which cloud service provider to use - Google Cloud: 'gcp' or Azure: 'az'"
    default: "gcp"
  gcp_project_id:
    description: "Google Cloud project ID, required when using Google Cloud"
  gcp_cluster_name:
    description: "Name of the Kubernetes cluster, required when using Google Cloud"
  gcp_cluster_location:
    description: "Location of the Kubernetes cluster, GCP option"
    default: "europe-west1"
  azure_cluster_resource_group:
    description: "Azure cluster resource group, required when using Azure"
  azure_cluster_name:
    description: "Azure cluster name, required when using Azure"
  azure_token:
    description: "Kubernetes token, required when using Azure"

runs:
  using: "composite"
  steps:
    - id: verify-cloud-provider
      if: inputs.cloud_provider != 'gcp' && inputs.cloud_provider != 'az'
      shell: bash
      env:
        GHA_CLOUD_AUTH_CLOUD_PROVIDER: ${{ inputs.cloud_provider }}
      run: |
        echo "Invalid cloud provider input: ${GHA_CLOUD_AUTH_CLOUD_PROVIDER}"
        echo "Valid options are: 'gcp' or 'az'"
        exit 1
    - id: set-vars-gcp
      name: Set GCP environment variables
      if: inputs.cloud_provider == 'gcp'
      shell: bash
      env:
        GOOGLE_PROJECT_ID: ${{ inputs.gcp_project_id }}
        GOOGLE_CLUSTER_NAME: ${{ inputs.gcp_cluster_name }}
        GOOGLE_CLUSTER_LOCATION: ${{ inputs.gcp_cluster_location }}
        ENVIRONMENT: ${{ inputs.environment }}
      run: |
        if [ -z "${GOOGLE_PROJECT_ID}" ]; then
          echo "Project ID is not set, using default"
          echo "GOOGLE_PROJECT_ID=ent-kub-${ENVIRONMENT}" >> $GITHUB_ENV
        else
          echo "Setting project ID to ${GOOGLE_PROJECT_ID}"
          echo "GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}" >> $GITHUB_ENV
        fi
        if [ -z "${GOOGLE_CLUSTER_NAME}" ]; then
          echo "Cluster name is not set, using default"
          echo "GOOGLE_CLUSTER_NAME=kub-ent-${ENVIRONMENT}-001" >> $GITHUB_ENV
        else
          echo "Setting cluster name to ${GOOGLE_CLUSTER_NAME}"
          echo "GOOGLE_CLUSTER_NAME=${GOOGLE_CLUSTER_NAME}" >> $GITHUB_ENV
        fi
        if [ "${GOOGLE_CLUSTER_LOCATION}" == "europe-west1" ]; then
          echo "Cluster location set to europe-west1"
          echo "GOOGLE_CLUSTER_LOCATION=${GOOGLE_CLUSTER_LOCATION}" >> $GITHUB_ENV
        elif [ "${GOOGLE_CLUSTER_LOCATION}" == "europe-west4" ]; then
          echo "Setting cluster location to ${GOOGLE_CLUSTER_LOCATION}"
          echo "GOOGLE_CLUSTER_LOCATION=${GOOGLE_CLUSTER_LOCATION}" >> $GITHUB_ENV
        else
          echo "Invalid cluster location: ${GOOGLE_CLUSTER_LOCATION}"
          echo "Valid options are: 'europe-west1' or 'europe-west4'"
          exit 1
        fi
    - id: auth-gcp
      name: Authenticate with Google Cloud
      if: inputs.cloud_provider == 'gcp'
      uses: google-github-actions/get-gke-credentials@v2
      with:
        project_id: ${{ env.GOOGLE_PROJECT_ID }}
        cluster_name: ${{ env.GOOGLE_CLUSTER_NAME }}
        location: ${{ env.GOOGLE_CLUSTER_LOCATION }}
    - id: kubelogin-azure
      name: Authenticate with Azure Kubernetes cluster
      if: inputs.cloud_provider == 'az'
      uses: azure/use-kubelogin@v1
      env:
        GITHUB_TOKEN: ${{ inputs.azure_token }}
      with:
        kubelogin-version: "latest"
    - id: set-context-azure
      name: Set context for Azure Kubernetes cluster
      if: inputs.cloud_provider == 'az'
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ inputs.azure_cluster_resource_group }}
        cluster-name: ${{ inputs.azure_cluster_name }}
        admin: false
        use-kubelogin: true
